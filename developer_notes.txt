Last-Modified: <2014-01-26 12:43:51>


---
Questions and issues
- do we wish to guarantee that the ordering of fields within a returned dataset will match the ordering within the query. e.g. if the user asks for latitude,longitude,state does it matter if we return the results with a different order e.g state,longitude,latitude? If we can allow this mismatch in ordering, our caching will be slightly more efficient. At the moment, the ordering is not preserved (see ala_cache_filename)
- in ala_specieslist, the returned data has a column named "LSID". Should this be "GUID"?

---
General considerations and notes:

- functions are prefixed with "ala_", e.g. ala_bulklookup(). The latter part of the function name should generally follow the web service name (e.g. /ws/species/bulklookup.json)
- we will use CSV output from ALA rather than JSON where possible, since CSV is more efficient and easier to convert to sensible R data structures. R's read.table() can also handle compressed csv's without needing to explicitly uncompress them
- need to put some checks on internet activity, e.g. identify when a connection could not be made to the ALA servers (either they are down, or the user has no connection)
- should probably be reasonably rigorous in checking that input arguments are sensible and valid

---
Configuration

- see ala_config()
- allows the user to set some configuration options, currently caching, the user_agent string (needs documentation), and verbosity (for debugging)
- the configuration settings can be accessed from other functions using e.g. ala_config()$caching, ala_config()$cache_directory, ala_config()$verbose, etc


---
Caching

- a simple caching scheme has been implemented. ala_cache_filename() returns the name of the cached file associated with a particular URL. Note that the file may not yet actually be cached on the local computer. ala_download_to_file() takes a URL, and either downloads the file or retrieves it from the cache, and also stores it in the cache (depending on the caching settings).
- the user can control the caching behaviour via the configuration options. caching can be "on","off", or "refresh". The user can also set the cache directory. By default this is a temporary directory that will be cleared automatically at the end of the R session. The user may wish to set this to a different location to allow results to be cached across R sessions. Needs documentation.
- caching has so far been implemented for GET operations within ala_fields, ala_autocomplete, ala_species_info, and ala_specieslist. POST operations (ala_bulklookup) are not yet cached. (We may wish to consider providing caching for *everything*, so that the user can repeat previous analyses without needing an internet connection.)


---
Supported queries (from Lee's word document), with initial assignment to [Jeremy] or [Ben]:

1. Species profile. Initially, interaction with the ALA is required to identify which taxa or group of taxa are of interest. 
   a. Auto-complete (partial matching) would be ideal. Support for scientific names (P1) and common names (p2) required.
      - ala_autocomplete() initial version is working. Both scientific and common names will match.
      - issues: the returned data has <b></b> tags marking the matches (either in scientificNameMatches or commonNameMatches). We can either remove these tags, or drop these columns entirely. There is also a matchedNames column with the same information (no tags), although it doesn't identify whether the match was on a scientific or common name.
      - data format is currently a data.frame, may need to be made more compatible with other packages (rgbif etc)

   b. Second: general information about a taxa or group (i.e. the existing species profile services)
      - ala_speciesinfo() initial version is working. Data format needs work.

2. [Ben] List of (unique) taxa in an area: Supply WKT?
   - ala_specieslist() initial version is working. Data currently returned as a data.frame, need to check what the equivalent data structure is in e.g. rgbif so t hat we can be compatible if appropriate. WKT string not currently checked for validity.

3. [Jeremy] Search for Environmental/contextual layers of interest. Search names and tags - return list?

4. [Ben] Species occurrence records
   a. Optionally within area defined by WKT
   b. Optionally with appended selected environmental/contextual data values
   c. Key ‘visualization’ = data quality flags. Some interaction or at least a summary of relevant flags, to allow the user to understand which records have been flagged and for what reasons.

   - ala_occurrences() very preliminary version is working


5. Tabulations: 2x contextual classes table with entries being one of: 
   a. area
   b. number of occurrences, or 
   c. number of species

6. Sites by taxa matrix. Rows=grid cells and columns = taxa, entries = counts.
   a. Within area of interest
   b. Sparse matrix so a compressed ‘index’ format would be ideal but the problem then would be (c) unless a separate vector was produced (most likely option)
   c. Optionally, with environmental/contextual data of cell (centre, averaged points?)

7. [Jeremy] Area report: general information about an area. The main use: comparing areas.
