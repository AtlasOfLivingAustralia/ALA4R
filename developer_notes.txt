Last-Modified: <2014-01-31 18:30:02>


---
Questions and issues

ALA4R issues:
- do we wish to guarantee that the ordering of fields within a returned dataset will match the ordering within the query. e.g. if the user asks for latitude,longitude,state does it matter if we return the results with a different order e.g state,longitude,latitude? If we can allow this mismatch in ordering, our caching will be slightly more efficient. At the moment, the ordering is not preserved (see ala_cache_filename)
- need to check whether the argument name "taxon" is appropriate to use in all functions. This is mapped to the web service parameter name "q", which for some functions may be more general than just taxa.
- for autocomplete(), the returned data has <b></b> tags marking the matches (either in scientificNameMatches or commonNameMatches). We can either remove these tags, or drop these columns entirely. There is also a matchedNames column with the same information (no tags), although it doesn't identify whether the match was on a scientific or common name.


---
General considerations and notes:

- use "ala_" as a function name prefix only where it the function is ambiguous or may clash with others (e.g. ala_config)
- we will use CSV output from ALA rather than JSON where possible, since CSV is more efficient and easier to convert to sensible R data structures. R's read.table() can also handle compressed csv's without needing to explicitly uncompress them
- need to put some checks on internet activity, e.g. identify when a connection could not be made to the ALA servers (either they are down, or the user has no connection)
- should probably be reasonably rigorous in checking that input arguments are sensible and valid

---
Configuration

- see ala_config()
- allows the user to set some configuration options, currently caching, the user_agent string (needs documentation), and verbosity (for debugging)
- the configuration settings can be accessed from other functions using e.g. ala_config()$caching, ala_config()$cache_directory, ala_config()$verbose, etc


---
Caching

- a simple caching scheme has been implemented. 
- cached_get() is the main function. This a wrapper function around httr's GET, but also takes care of caching, setting the user-agent string, and checking the http status response code.
- ala_cache_filename() returns the name of the cached file associated with a particular URL. Note that the file may not yet actually be cached on the local computer. 
- the user can control the caching behaviour via the configuration options. caching can be "on","off", or "refresh". The user can also set the cache directory. By default this is a temporary directory that will be cleared automatically at the end of the R session. The user may wish to set this to a different location to allow results to be cached across R sessions. Needs documentation.
- POST operations (bulklookup) are not yet cached. (We may wish to consider providing caching for *everything*, so that the user can repeat previous analyses without needing an internet connection.)


---
Supported queries (from Lee's word document), with initial assignment to [Jeremy] or [Ben]:

1. Species profile. Initially, interaction with the ALA is required to identify which taxa or group of taxa are of interest. 
   a. Auto-complete (partial matching) would be ideal. Support for scientific names (P1) and common names (p2) required.
      - autocomplete() initial version is working. Both scientific and common names will match.
      - data format is currently a data.frame, may need to be made more compatible with other packages (rgbif etc)

   b. Second: general information about a taxa or group (i.e. the existing species profile services)
      - species_info() initial version is working. Data format needs work. UPDATE - this isn't actually a species profile. Renamed to fulltext_search. Replacement species_info() function now has an initial version.


2. [Ben] List of (unique) taxa in an area: Supply WKT?
   - specieslist() initial version is working. Data currently returned as a data.frame, need to check what the equivalent data structure is in e.g. rgbif so that we can be compatible if appropriate. WKT string is now checked for validity.

3. [Jeremy] Search for Environmental/contextual layers of interest. Search names and tags - return list?

4. [Ben] Species occurrence records
   a. Optionally within area defined by WKT
   b. Optionally with appended selected environmental/contextual data values
   - occurrences() initial version is working with WKT and taxon search facilities. Fields can be specified (by default, it seems that most but not all fields are returned --- 481 fields at the moment, out of a possible 577)

   c. Key ‘visualization’ = data quality flags. Some interaction or at least a summary of relevant flags, to allow the user to understand which records have been flagged and for what reasons.


5. Tabulations: 2x contextual classes table with entries being one of: 
   a. area
   b. number of occurrences, or 
   c. number of species

6. Sites by taxa matrix. Rows=grid cells and columns = taxa, entries = counts.
   a. Within area of interest
   b. Sparse matrix so a compressed ‘index’ format would be ideal but the problem then would be (c) unless a separate vector was produced (most likely option)
   c. Optionally, with environmental/contextual data of cell (centre, averaged points?)

7. [Jeremy] Area report: general information about an area. The main use: comparing areas.
